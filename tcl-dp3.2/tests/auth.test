if {[string compare test [info procs test]] == 1} then {source defs}

proc MyCheck {args} {
    set cmd [lindex $args 0]
    if {$cmd != "dp_CloseRPCFile"} {
	if {([lindex $args 0] != "set") ||
	    ([llength $args] != 2)} {
	    error {Only "set var" allowed}
	}
    }
}

set S_PORT [dp_MakeRPCServer 0 dp_CheckHost MyCheck]

proc MakeInetAddr {name} {
    set addr [dp_address create $name 0]
    set x [dp_address info $addr]
    dp_address delete $addr
    lindex $x 0
}
set hostname [exec hostname]
set hostinet [MakeInetAddr $hostname]

#------------------------------------------------------------------------
#
# Add hosts/services to tables
#
test access-1.0 {Backwards compatibility} {
  catch {dp_MakeRPCClient $hostname $S_PORT} file
} 0
catch {close $file}

test access-1.1 {Disable all} {
  dp_Host -
  list [catch {dp_MakeRPCClient $hostname $S_PORT} msg] $msg
} {1 {Connection refused: Host not authorized}}

test access-1.2 {Enable all but this host} {
  dp_Host +
  dp_Host -$hostname
  list [catch {dp_MakeRPCClient $hostname $S_PORT} msg] $msg
} {1 {Connection refused: Host not authorized}}

test access-1.3 {Disable all but this host} {
  dp_Host -
  dp_Host +$hostname
  catch {dp_MakeRPCClient $hostname $S_PORT} file
} 0
catch {close $file}

test access-1.4 {Pattern-based enable} {
  dp_Host -
  set addr [split $hostinet .]
  set f0 [lindex $addr 0]
  set f1 [lindex $addr 1]
  set f2 [lindex $addr 2]
  dp_Host +$f0.$f1.$f2.*
  catch {dp_MakeRPCClient $hostname $S_PORT} file
} 0
catch {close $file}

test access-1.5 {Pattern-based disable} {
  dp_Host +
  dp_Host -$f0.$f1.$f2.*
  list [catch {dp_MakeRPCClient $hostname $S_PORT} msg] $msg
} {1 {Connection refused: Host not authorized}}

test access-1.6 {Enable/disable list} {
  dp_Host +$hostname
  catch {dp_MakeRPCClient $hostname $S_PORT} file
} 0
catch {close $file}

test access-1.7 {Illegal hostname} {
  catch {dp_Host +foo.bar}
} 1

#------------------------------------------------------------------------
#
# Check command verification
#

dp_Host +
set client [dp_MakeRPCClient $hostname $S_PORT]

test access-2.1 {Check of allowed command} {
  catch {dp_RPC $client -events all set rpcFile}
} 0

test access-2.2 {Check of disallowed command} {
  list [catch {dp_RPC $client -events all set a 5} msg] $msg
} {1 {Only "set var" allowed}}

for {set fd 3} {$fd < 15} {incr fd} {
    catch {close file$fd}
}
dp_Host +
